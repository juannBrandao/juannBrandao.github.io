{"version":3,"sources":["pages/Home/styles.ts","services/api.ts","util/format.ts","hooks/useCart.tsx","pages/Home/index.tsx","pages/Cart/styles.ts","pages/Cart/index.tsx","routes.tsx","assets/images/background.svg","styles/Global.ts","assets/images/store.png","components/Header/styles.ts","components/Header/index.tsx","App.tsx","index.tsx"],"names":["ProductList","styled","ul","api","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","CartContext","createContext","CartProvider","children","useState","storagedCart","localStorage","getItem","JSON","parse","cart","setCart","addProduct","productId","a","updateCart","productExists","find","product","id","get","stock","stockAmount","data","amount","currentAmount","toast","error","newProduct","push","setItem","stringify","updateProductAmount","console","log","Error","Provider","value","removeProduct","productIndex","findIndex","splice","useCart","useContext","Home","products","setProducts","cartItemsAmount","reduce","sumAmount","newSumAmount","useEffect","response","map","priceFormatted","price","loadProducts","src","image","alt","name","type","data-testid","onClick","size","color","Container","div","ProductTable","table","Total","Cart","cartFormatted","subTotal","total","sumTotal","aria-label","title","disabled","handleProductDecrement","readOnly","handleProductIncrement","Routes","path","exact","component","createGlobalStyle","background","header","Link","Header","cartSize","length","to","logo","App","Global","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a090b436.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ProductList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 20px;\r\n  list-style: none;\r\n\r\n  li {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    padding: 20px;\r\n\r\n    img {\r\n      align-self: center;\r\n      max-width: 250px;\r\n    }\r\n\r\n    > strong {\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n      color: #333;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    > span {\r\n      font-size: 21px;\r\n      font-weight: bold;\r\n      margin: 5px 0 20px;\r\n    }\r\n\r\n    button {\r\n      background: #3e82fc;\r\n      color: #fff;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      overflow: hidden;\r\n      margin-top: auto;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      transition: background 0.2s;\r\n\r\n      div {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 12px;\r\n        background: rgba(0, 0, 0, 0.1);\r\n\r\n        svg {\r\n          margin-right: 5px;\r\n        }\r\n      }\r\n\r\n      span {\r\n        flex: 1;\r\n        text-align: center;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: \" https://5d6da1df777f670014036125.mockapi.io/api/v1/\",\r\n});\r\n","export const { format: formatPrice } = new Intl.NumberFormat(\"pt-br\", {\r\n  style: \"currency\",\r\n  currency: \"BRL\",\r\n});\r\n","import { createContext, ReactNode, useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from \"../services/api\";\r\nimport { Product, Stock } from \"../types/types\";\r\n\r\ninterface CartProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface UpdateProductAmount {\r\n  productId: number;\r\n  amount: number;\r\n}\r\n\r\ninterface CartContextData {\r\n  cart: Product[];\r\n  addProduct: (productId: number) => Promise<void>;\r\n  removeProduct: (productId: number) => void;\r\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\r\n}\r\n\r\nconst CartContext = createContext<CartContextData>({} as CartContextData);\r\n\r\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\r\n  const [cart, setCart] = useState<Product[]>(() => {\r\n    const storagedCart = localStorage.getItem(\"@Juann:cart\");\r\n\r\n    if (storagedCart) {\r\n      return JSON.parse(storagedCart);\r\n    }\r\n\r\n    return [];\r\n  });\r\n\r\n  const addProduct = async (productId: number) => {\r\n    try {\r\n      const updateCart = [...cart];\r\n      const productExists = updateCart.find(\r\n        (product) => product.id === productId\r\n      );\r\n      const stock = await api.get(`/product/${productId}`);\r\n      const stockAmount = stock.data.amount;\r\n      const currentAmount = productExists ? productExists.amount : 0;\r\n      const amount = currentAmount + 1;\r\n\r\n      if (amount > stockAmount) {\r\n        toast.error(\"Quantidade solicitada fora de estoque\");\r\n        return;\r\n      }\r\n      if (productExists) {\r\n        productExists.amount = amount;\r\n      } else {\r\n        const product = await api.get(`/product/${productId}`);\r\n        const newProduct = {\r\n          ...product.data,\r\n          amount: 1,\r\n        };\r\n        updateCart.push(newProduct);\r\n      }\r\n\r\n      setCart(updateCart);\r\n      localStorage.setItem(\"@Juann:cart\", JSON.stringify(updateCart));\r\n    } catch {\r\n      toast.error(\"Erro na adição do produto\");\r\n    }\r\n  };\r\n\r\n  const removeProduct = (productId: number) => {\r\n    try {\r\n      const updateCart = [...cart];\r\n      const productIndex = updateCart.findIndex(\r\n        (product) => product.id === productId\r\n      );\r\n      if (productIndex >= 0) {\r\n        updateCart.splice(productIndex, 1);\r\n        setCart(updateCart);\r\n        localStorage.setItem(\"@Juann:cart\", JSON.stringify(updateCart));\r\n      } else {\r\n        throw Error();\r\n      }\r\n    } catch {\r\n      toast.error(\"Erro na remoção do produto\");\r\n    }\r\n  };\r\n\r\n  const updateProductAmount = async ({\r\n    productId,\r\n    amount,\r\n  }: UpdateProductAmount) => {\r\n    try {\r\n      if (amount <= 0) {\r\n        return;\r\n      }\r\n      const stock = await api.get(`/product/${productId}`);\r\n      const stockAmount = stock.data.amount;\r\n      console.log(stock);\r\n      if (amount > stockAmount) {\r\n        toast.error(\"Quantidade solicitada fora de estoque\");\r\n        return;\r\n      }\r\n      const updateCart = [...cart];\r\n      const productExists = updateCart.find(\r\n        (product) => product.id === productId\r\n      );\r\n      if (productExists) {\r\n        productExists.amount = amount;\r\n        setCart(updateCart);\r\n        localStorage.setItem(\"@Juann:cart\", JSON.stringify(updateCart));\r\n      } else {\r\n        throw Error();\r\n      }\r\n    } catch {\r\n      toast.error(\"Erro na alteração de quantidade do produto\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ cart, addProduct, removeProduct, updateProductAmount }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCart(): CartContextData {\r\n  const context = useContext(CartContext);\r\n\r\n  return context;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MdAddShoppingCart } from \"react-icons/md\";\r\n\r\nimport { ProductList } from \"./styles\";\r\nimport { api } from \"../../services/api\";\r\nimport { formatPrice } from \"../../util/format\";\r\nimport { useCart } from \"../../hooks/useCart\";\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n}\r\n\r\ninterface ProductFormatted extends Product {\r\n  priceFormatted: string;\r\n}\r\n\r\ninterface CartItemsAmount {\r\n  [key: number]: number;\r\n}\r\n\r\nconst Home = (): JSX.Element => {\r\n  const [products, setProducts] = useState<ProductFormatted[]>([]);\r\n  const { addProduct, cart } = useCart();\r\n\r\n  const cartItemsAmount = cart.reduce((sumAmount, product) => {\r\n    const newSumAmount = { ...sumAmount };\r\n    newSumAmount[product.id] = product.amount;\r\n\r\n    return newSumAmount;\r\n  }, {} as CartItemsAmount);\r\n\r\n  useEffect(() => {\r\n    async function loadProducts() {\r\n      const response = await api.get<Product[]>(\"product\");\r\n      const data = response.data.map((product) => ({\r\n        ...product,\r\n        priceFormatted: formatPrice(product.price),\r\n      }));\r\n      setProducts(data);\r\n    }\r\n\r\n    loadProducts();\r\n  }, []);\r\n\r\n  function handleAddProduct(id: number) {\r\n    addProduct(id);\r\n  }\r\n\r\n  return (\r\n    <ProductList>\r\n      {products.map((product) => {\r\n        return (\r\n          <li key={product.id}>\r\n            <img src={product.image} alt={product.name} />\r\n            <strong>{product.name}</strong>\r\n            <span>{product.priceFormatted}</span>\r\n            <button\r\n              type=\"button\"\r\n              data-testid=\"add-product-button\"\r\n              onClick={() => handleAddProduct(product.id)}\r\n            >\r\n              <div data-testid=\"cart-product-quantity\">\r\n                <MdAddShoppingCart size={16} color=\"#FFF\" />\r\n                {cartItemsAmount[product.id] || 0}\r\n              </div>\r\n\r\n              <span>ADICIONAR AO CARRINHO</span>\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ProductList>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 30px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n\r\n  footer {\r\n    margin-top: 30px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    button {\r\n      background: #3e82fc;\r\n      color: #fff;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      padding: 12px 20px;\r\n      font-weight: bold;\r\n      text-transform: uppercase;\r\n      transition: background 0.2s;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProductTable = styled.table`\r\n  width: 100%;\r\n\r\n  thead th {\r\n    color: #999;\r\n    text-align: left;\r\n    padding: 12px;\r\n  }\r\n\r\n  tbody td {\r\n    padding: 12px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n\r\n  img {\r\n    height: 100px;\r\n  }\r\n\r\n  strong {\r\n    color: #333;\r\n    display: block;\r\n  }\r\n\r\n  span {\r\n    display: block;\r\n    margin-top: 5px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    input {\r\n      border: 1px solid #ddd;\r\n      border-radius: 4px;\r\n      color: #666;\r\n      padding: 6px;\r\n      width: 50px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    background: none;\r\n    border: 0;\r\n    padding: 6px;\r\n\r\n    svg {\r\n      color: #3e82fc;\r\n      transition: color 0.2s;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Total = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n\r\n  span {\r\n    color: #999;\r\n    font-weight: bold;\r\n  }\r\n\r\n  strong {\r\n    font-size: 28px;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  MdDelete,\r\n  MdAddCircleOutline,\r\n  MdRemoveCircleOutline,\r\n} from \"react-icons/md\";\r\n\r\nimport { useCart } from \"../../hooks/useCart\";\r\nimport { formatPrice } from \"../../util/format\";\r\nimport { Container, ProductTable, Total } from \"./styles\";\r\n\r\ninterface Product {\r\n  id: number;\r\n  title: string;\r\n  price: number;\r\n  image: string;\r\n  amount: number;\r\n}\r\n\r\nconst Cart = (): JSX.Element => {\r\n  const { cart, removeProduct, updateProductAmount } = useCart();\r\n\r\n  const cartFormatted = cart.map((product) => ({\r\n    ...product,\r\n    priceFormatted: formatPrice(product.price),\r\n    subTotal: formatPrice(product.price * product.amount),\r\n  }));\r\n  const total = formatPrice(\r\n    cart.reduce((sumTotal, product) => {\r\n      return sumTotal + product.price * product.amount;\r\n    }, 0)\r\n  );\r\n\r\n  function handleProductIncrement(product: Product) {\r\n    updateProductAmount({ productId: product.id, amount: product.amount + 1 });\r\n  }\r\n\r\n  function handleProductDecrement(product: Product) {\r\n    updateProductAmount({ productId: product.id, amount: product.amount - 1 });\r\n  }\r\n\r\n  function handleRemoveProduct(productId: number) {\r\n    removeProduct(productId);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <ProductTable>\r\n        <thead>\r\n          <tr>\r\n            <th aria-label=\"product image\" />\r\n            <th>PRODUTO</th>\r\n            <th>QTD</th>\r\n            <th>SUBTOTAL</th>\r\n            <th aria-label=\"delete icon\" />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cartFormatted.map((product) => (\r\n            <tr data-testid=\"product\" key={product.id}>\r\n              <td>\r\n                <img src={product.image} alt={product.title} />\r\n              </td>\r\n              <td>\r\n                <strong>{product.title}</strong>\r\n                <span>{product.priceFormatted}</span>\r\n              </td>\r\n              <td>\r\n                <div>\r\n                  <button\r\n                    type=\"button\"\r\n                    data-testid=\"decrement-product\"\r\n                    disabled={product.amount <= 1}\r\n                    onClick={() => handleProductDecrement(product)}\r\n                  >\r\n                    <MdRemoveCircleOutline size={20} />\r\n                  </button>\r\n                  <input\r\n                    type=\"text\"\r\n                    data-testid=\"product-amount\"\r\n                    readOnly\r\n                    value={product.amount}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    data-testid=\"increment-product\"\r\n                    onClick={() => handleProductIncrement(product)}\r\n                  >\r\n                    <MdAddCircleOutline size={20} />\r\n                  </button>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <strong>{product.subTotal}</strong>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  data-testid=\"remove-product\"\r\n                  onClick={() => handleRemoveProduct(product.id)}\r\n                >\r\n                  <MdDelete size={20} />\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </ProductTable>\r\n\r\n      <footer>\r\n        <button type=\"button\">Finalizar pedido</button>\r\n\r\n        <Total>\r\n          <span>TOTAL</span>\r\n          <strong>{total}</strong>\r\n        </Total>\r\n      </footer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Cart from \"./pages/Cart\";\r\n\r\nconst Routes = (): JSX.Element => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/cart\" component={Cart} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","export default __webpack_public_path__ + \"static/media/background.33a0e105.svg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport background from \"../assets/images/background.svg\";\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: #191920 url(${background}) no-repeat center top;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  body, input, button {\r\n    font: 14px Roboto, sans-serif;\r\n  }\r\n\r\n  #root {\r\n    max-width: 1020px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 50px;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/store.59e4d6f3.png\";","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Container = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 50px 0;\r\n\r\n  a {\r\n    color: #fff;\r\n    transition: opacity 0.2s;\r\n    img {\r\n      width: 58px;\r\n    }\r\n    &:hover {\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Cart = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n\r\n  div {\r\n    text-align: right;\r\n    margin-right: 10px;\r\n\r\n    strong {\r\n      display: block;\r\n      color: #fff;\r\n    }\r\n\r\n    span {\r\n      font-size: 12px;\r\n      color: #999;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdShoppingBasket } from \"react-icons/md\";\r\n\r\nimport logo from \"../../assets/images/store.png\";\r\nimport { Container, Cart } from \"./styles\";\r\nimport { useCart } from \"../../hooks/useCart\";\r\n\r\nconst Header = (): JSX.Element => {\r\n  const { cart } = useCart();\r\n  const cartSize = cart.length;\r\n  return (\r\n    <Container>\r\n      <Link to=\"/\">\r\n        <img src={logo} alt=\"Rocketshoes\" />\r\n      </Link>\r\n\r\n      <Cart to=\"/cart\">\r\n        <div>\r\n          <strong>Meu carrinho</strong>\r\n          <span data-testid=\"cart-size\">\r\n            {cartSize === 1 ? `${cartSize} item` : `${cartSize} itens`}\r\n          </span>\r\n        </div>\r\n        <MdShoppingBasket size={36} color=\"#FFF\" />\r\n      </Cart>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport Routes from \"./routes\";\nimport GlobalStyles from \"./styles/Global\";\nimport Header from \"./components/Header\";\nimport { CartProvider } from \"./hooks/useCart\";\n\nconst App = (): JSX.Element => {\n  return (\n    <BrowserRouter>\n      <CartProvider>\n        <GlobalStyles />\n        <Header />\n        <Routes />\n        <ToastContainer autoClose={3000} />\n      </CartProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}